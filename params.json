{"name":"Django-bootstrap-themes","tagline":"Support for multiple Bootstrap themes in Django","body":"django-bootstrap-themes\r\n=======================\r\n\r\nBootstrap theme support for Django, includes themes from Bootswatch.\r\n\r\n  * Bootstrap (http://getbootstrap.com/)\r\n  * Bootswatch (http://bootswatch.com/)\r\n\r\nInstallation\r\n------------\r\n\r\ndjango-bootstrap-themes can be installed via pip:\r\n\r\n```shell\r\npip install django-bootstrap-themes\r\n```\r\n\r\nor by copying the `bootstrap_themes` directory into your Django project.\r\n\r\nConfiguration\r\n-------------\r\n\r\nTo configure django-bootstrap-themes in your project, first add it to\r\nthe installed apps in your Django settings:\r\n\r\n```python\r\nINSTALLED_APPS = (\r\n    # Django apps\r\n    'bootstrap_themes',\r\n    # Other apps\r\n)\r\n```\r\n\r\nOnce you've added it to your installed apps, you can use the template\r\ntags to get the CSS and JS files for Bootstrap:\r\n\r\n  * Loading the templatetags\r\n\r\n```django\r\n{% load bootstrap_themes %}\r\n```\r\n\r\n  * Getting the CSS files (use the `theme` parameter to select the theme\r\n    and the `type` parameter to choose between CSS, minified CSS, or LESS\r\n    format for the stylesheets)\r\n\r\n```django\r\n{% bootstrap_styles theme='default' type='min.css' %}\r\n{% bootstrap_styles theme='cosmo' type='css' %}\r\n{% bootstrap_styles theme='united' type='less' %}\r\n```\r\n\r\n  * Getting the Javascript files (select minified or not with the\r\n    `use_min` parameter)\r\n\r\n```django\r\n{% bootstrap_script use_min=True %}\r\n```\r\n\r\nAs with any Django templatetags, you can use variables for the\r\nparameters, thus making it easy to switch themes, and even make the\r\ntheme user-configurable.\r\n\r\nIf you want to make the theme user configurable, there is a handy\r\nfunction to return the list of included themes as a `choices` list for\r\na `CharField`, like this:\r\n\r\n```python\r\nfrom django.db import models\r\nfrom bootstrap_themes import list_themes\r\n\r\nclass MyModel(models.Model):\r\n    theme = models.CharField(default='default', choices=list_themes())\r\n```\r\n\r\nThen in your templates, you can use the value of the `theme` field as the\r\ntheme parameter to `bootstrap_styles`.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}